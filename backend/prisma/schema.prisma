// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model News {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255) // Ограничение длины
  content     String   @db.Text
  htmlContent String?  @db.LongText // Изменено на LONGTEXT
  media       Json
  cover       String?  @db.Text // <--- ИЗМЕНИТЬ ЗДЕСЬ
  isVisible   Boolean  @default(true) // <--- Добавить поле видимости
  customCss   String?  @db.LongText // новое поле для кастомных стилей
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Page {
  id              Int      @id @default(autoincrement())
  slug            String   @unique
  title           String
  content         String   @db.LongText
  isVisible       Boolean  @default(true)
  customCss       String?  @db.LongText
  metaDescription String?  @db.Text
  metaKeywords    String?  @db.Text
  history         Json?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  name     String? // Поле name должно быть определено

  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MenuItem {
  id        Int        @id @default(autoincrement())
  title     String     @db.VarChar(255)
  link      String     @db.VarChar(255)
  mute      Boolean    @default(false)
  parentId  Int?
  parent    MenuItem?  @relation("MenuItemToParent", fields: [parentId], references: [id])
  children  MenuItem[] @relation("MenuItemToParent")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

// Переименовываем модель в PascalCase согласно соглашениям Prisma
model CarouselImage {
  id        Int      @id @default(autoincrement())
  url       String
  title     String? // Добавляем необязательное поле для заголовка изображения
  alt       String? // Добавляем необязательное поле для alt-текста (доступность)
  order     Int      @default(0) // Добавляем поле для сортировки
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("carouselImage") // Сохраняем старое имя таблицы для совместимости
}

model Treba {
  id            Int      @id @default(autoincrement())
  type          String // 'о здравии' или 'об упокоении'
  names         String // Список имён (через запятую или перенос строки)
  note          String? // Дополнительная записка
  paymentStatus String   @default("pending") // 'pending', 'paid', 'failed'
  paymentId     String? // ID платежа в платёжной системе
  createdAt     DateTime @default(now())
}

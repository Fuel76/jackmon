import React, { useEffect, useState } from 'react';
import { Link, useNavigate } from 'react-router-dom'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Link –∏ useNavigate
import './AdminNewsList.css'; // –°–æ–∑–¥–∞–¥–∏–º —Ñ–∞–π–ª —Å—Ç–∏–ª–µ–π

// –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
interface News {
  id: number;
  title: string;
  htmlContent: string;
  media: string[] | string;
  createdAt: string;
  cover?: string;
  isVisible: boolean; // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏
}

export const NewsList = () => {
  const [news, setNews] = useState<News[]>([]);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);
  const navigate = useNavigate(); // –•—É–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

  const fetchNews = async () => {
    setLoading(true);
    setError(null);
    try {
      const response = await fetch('http://localhost:3000/api/news');
      if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
      const data = await response.json();
      // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–¥–µ—Å—å:
      const newsArray = Array.isArray(data) ? data : data.news;
      setNews(newsArray.sort((a: News, b: News) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π:', error);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏.');
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchNews();
  }, []);

  const handleEdit = (id: number) => {
    navigate(`/admin/news/edit/${id}`); // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  };

  const handleToggleVisibility = async (id: number) => {
    try {
      const response = await fetch(`http://localhost:3000/api/news/${id}/toggle-visibility`, {
        method: 'PATCH',
      });
      if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏');
      const updatedNewsItem = await response.json();
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ
      setNews(prevNews =>
        prevNews.map(item =>
          item.id === id ? { ...item, isVisible: updatedNewsItem.isVisible } : item
        )
      );
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞:', err);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å –Ω–æ–≤–æ—Å—Ç–∏.');
    }
  };

  const handleDelete = async (id: number) => {
    if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –Ω–æ–≤–æ—Å—Ç—å?')) {
      return;
    }
    try {
      const response = await fetch(`http://localhost:3000/api/news/${id}`, {
        method: 'DELETE',
      });
      if (!response.ok) {
         if (response.status === 404) throw new Error('–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
         throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏');
      }
      // –£–¥–∞–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç—å –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      setNews(prevNews => prevNews.filter(item => item.id !== id));
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞:', err);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å.');
    }
  };

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π...</p>;
  if (error) return <p style={{ color: 'red' }}>{error}</p>;

  return (
    <div className="admin-news-list-container">
      <div className="admin-news-header">
        <h1>–°–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π</h1>
        <Link to="/admin/news/create" className="admin-button admin-button-create">
          + –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å
        </Link>
      </div>
      <div className="admin-news-list">
        {news.map((item) => {
          const coverUrl = item.cover; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É
          // –ü–∞—Ä—Å–∏–Ω–≥ media –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–∞–∫–∏–º –∂–µ
          let mediaUrls: string[] = [];
          try {
            mediaUrls = typeof item.media === 'string' ? JSON.parse(item.media) : (Array.isArray(item.media) ? item.media : []);
          } catch { mediaUrls = []; }

          return (
            <div key={item.id} className={`admin-news-card ${!item.isVisible ? 'admin-news-card--hidden' : ''}`}>
              {coverUrl && (
                <img src={coverUrl} alt={item.title} className="admin-news-card__cover" />
              )}
              <div className="admin-news-card__body">
                <h3 className="admin-news-card__title">{item.title}</h3>
                <p className="admin-news-card__date">
                  {new Date(item.createdAt).toLocaleDateString()} {new Date(item.createdAt).toLocaleTimeString()}
                  {!item.isVisible && <span className="admin-news-card__badge">–°–∫—Ä—ã—Ç–æ</span>}
                </p>
                {/* –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫—Ä–∞—Ç–∫–æ–µ –ø—Ä–µ–≤—å—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ */}
                {/* <div className="admin-news-card__preview" dangerouslySetInnerHTML={{ __html: item.htmlContent.slice(0, 100) + '...' }} /> */}
              </div>
              <div className="admin-news-card__actions">
                <button
                  onClick={() => handleEdit(item.id)}
                  className="admin-button admin-button-edit"
                  title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                >
                  ‚úèÔ∏è
                </button>
                <button
                  onClick={() => handleToggleVisibility(item.id)}
                  className={`admin-button ${item.isVisible ? 'admin-button-hide' : 'admin-button-show'}`}
                  title={item.isVisible ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å'}
                >
                  {item.isVisible ? 'üëÅÔ∏è' : 'üö´'}
                </button>
                <button
                  onClick={() => handleDelete(item.id)}
                  className="admin-button admin-button-delete"
                  title="–£–¥–∞–ª–∏—Ç—å"
                >
                  üóëÔ∏è
                </button>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  );
};